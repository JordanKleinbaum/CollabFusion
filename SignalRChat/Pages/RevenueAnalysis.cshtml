@page
@model SignalRChat.Pages.RevenueAnalysisModel
@{
    ViewData["username"] = HttpContext.Session.GetString("username");

}
<br />
@if (Model.RegressionAnalysisResult != null)
{
    <h2>Regression Analysis Result:</h2>
    <p>Intercept: @Model.RegressionAnalysisResult.Intercept</p>
    <p>Slope: @Model.RegressionAnalysisResult.Slope</p>
    <p>R-Squared: @Model.RegressionAnalysisResult.RSquared</p>

    <div id="scatterPlot"></div>
}

<hr />
<h2>Save Analysis</h2>

<form asp-page="RevenueAnalysis" style="margin-top: 20px;" method="post">
    <div class="form-group">
        <label class="form-label">Analysis Title</label>
        <input asp-for="AnalysisName" class="form-control" placeholder="Enter Analysis Title">
        <span asp-validation-for="AnalysisName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label class="form-label">Analysis Description</label>
        <textarea asp-for="AnalysisDescription" class="form-control" rows="4" placeholder="Enter Analysis Description"></textarea>
        <span asp-validation-for="AnalysisDescription" class="text-danger"></span>
    </div>

    <input type="hidden" name="fileName" value="@Request.Query["fileName"]" />

    <button type="submit" class="btn btn-custom" style="background-color: #293a7f; color: white; border-radius: 20px; padding: 10px 20px; border: none; cursor: pointer;">Save Analysis</button>
</form>

@section Scripts {
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <script>
        var xValues = @Html.Raw(Json.Serialize(Model.XValues));
        var yValues = @Html.Raw(Json.Serialize(Model.YValues));
        var trendline = @Html.Raw(Json.Serialize(Model.Trendline));

        var trace1 = {
            x: xValues,
            y: yValues,
            mode: 'markers',
            type: 'scatter'
        };

        var trace2 = {
            x: xValues,
            y: trendline,
            mode: 'lines',
            type: 'scatter',
            name: 'Trendline'
        };

        var data = [trace1, trace2];

        var layout = {
            title: 'Revenue Analysis',
            xaxis: {
                title: '@Model.XColumnHeader'
            },
            yaxis: {
                title: '@Model.YColumnHeader'
            }
        };

        Plotly.newPlot('scatterPlot', data, layout);
    </script>
}
